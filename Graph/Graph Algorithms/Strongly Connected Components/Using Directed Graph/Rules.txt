Strongly Connected Components can be thought of as self-contained cycles 
within a directed graph where every vertex in a given cycle can reach every 
other vertex in the same cycle.

Tarjan Algorihtm
formula : low_link[n] = min(low_link[n], low_link[m])

Rules
1: Start DFS add node into stack and assign low_link value of every node which mark visited.
2: When DFS cycle (visited node) reached than start backtracking if the previous node is on 
   stack then min the current node low_link value with the last node low_link value(apply formula). 
3: Than choose next random number in graph. And apply same step 1 & 2.


Kosaraju Algorihtm
Rules:
1: Fill vertices in stack according to their finishing times
2: Get the transposed graph
3: Perform DFS on the transposed graph in the order defined by Stack
